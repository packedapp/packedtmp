<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>app.packed</groupId>
    <artifactId>packed-root-pom</artifactId>
    <version>0.1-SNAPSHOT</version>
    <relativePath>..</relativePath>
  </parent>
  <artifactId>packed-modules-pom</artifactId>
  <packaging>pom</packaging>
  <name>Packed-Modules-Pom</name>
  <description>Packed Modules POM</description>
  
  <!-- ==================================================================== -->
  <modules>
    <module>packed-base</module>
    <!--
    <module>packed-base-micro</module>
    <module>packed-base-devtools</module>
    -->
  </modules>
  
  <!-- ==================================================================== -->
  <properties>
    <!-- Locate the root directory of the multi-module build -->
    <root.dir>${project.basedir}/..</root.dir>
    
    <!-- Test Dependencies Versions -->
    <version.test.assertj>3.19.0</version.test.assertj>
    <version.test.junit>5.7.1</version.test.junit>
    <version.test.jmh>1.29</version.test.jmh>
    
    <!-- Pluging Versions -->
    <version.plugin.jacoco>0.8.6</version.plugin.jacoco>
  </properties>

  <!-- ==================================================================== -->
  <dependencyManagement>
    <dependencies>
      <!-- Packed -->
      <dependency>
        <groupId>app.packed</groupId>
        <artifactId>packed-base</artifactId>
        <version>${project.version}</version>
      </dependency>
    
      <!-- Testing -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${version.test.junit}</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${version.test.assertj}</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-core</artifactId>
        <version>${version.test.jmh}</version>
      </dependency>
      <dependency>
        <groupId>org.openjdk.jmh</groupId>
        <artifactId>jmh-generator-annprocess</artifactId>
        <version>${version.test.jmh}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  
  <!-- ==================================================================== -->
  <build>
    <directory>${project.basedir}/target.tmp</directory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>16</source>
          <target>16</target>
          <compilerArgument>-Xlint:deprecation</compilerArgument>
          <compilerArgument>-Xlint:unchecked</compilerArgument>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <!-- Surefire does not pickup static test classes, unless we have these excludes, see https://github.com/junit-team/junit5/issues/1377 
        <configuration>
          <excludes>
            <exclude/>
          </excludes>
        </configuration>
        
        Should be fixed with 2.22.2
        -->
      </plugin>
    
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.3.0</version>
            <dependencies>
              <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.4.0-b180830.0359</version>
              </dependency>
            </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.plugin.jacoco}</version>
        <configuration>
          <excludes>
            <exclude>packed/internal/thirdparty/**/*</exclude>
          </excludes>
        </configuration>
      
        <!--
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        -->
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.1</version>
        <configuration>
          <excludePackageNames>packed.*:*.internals.*:*.test.*:*.examples.*:</excludePackageNames>
          <additionalOptions>--frames -tag "apiNote:a:API Note:" -tag "implSpec:a:Implementation Requirements:" -tag "implNote:a:Implementation Note:"</additionalOptions>
                <detectJavaApiLink>false</detectJavaApiLink>
                <offlineLinks>
                    <offlineLink>
                    <!--
                        <url>https://docs.oracle.com/en/java/javase/${maven.compiler.release}/docs/api/</url>-->
                        
                        <url>https://docs.oracle.com/javase/9/docs/api/</url>
                        
                        <location>${project.basedir}</location>
                    </offlineLink>
                </offlineLinks>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>